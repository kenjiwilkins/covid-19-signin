{"version":3,"sources":["reducers/index.js","store.js","actions/index.js","components/TitleBar.js","components/SuccessfulMessage.js","components/NameInput.js","components/EmailInput.js","components/NumberInput.js","components/Checkbox.js","components/TableNumberInput.js","pages/Main.js","pages/Login.js","components/UserSetting.js","components/Utilities.js","pages/Manage.js","pages/NotFound.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["userState","user","username","admin","token","reducers","combineReducers","user_state","state","action","type","newUser","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","login","logout","useStyles","makeStyles","TopPaper","backgroundColor","color","textAlign","TitleBar","props","classes","Paper","className","Container","maxWidth","Typography","variant","Grid","Icon","fontSize","SuccessfulMessage","container","spacing","justify","item","xs","CheckCircle","List","ListItem","ListItemText","primary","firstName","lastName","email","moment","checkInTime","format","NameInput","React","useState","touched","setTouched","valid","setValid","validator","e","target","value","length","handler","TextField","required","fullWidth","id","input","placeholder","helperText","label","onChange","error","paddingTop","paddingBottom","EmailInput","NumberInput","CheckForm","FormControlLabel","control","Checkbox","name","TableNumberInput","useEffect","tableQuery","exists","number","disabled","Main","handleFirstName","setState","prevState","handleLastName","handleEmail","handleNumber","handleTableNumber","tableNumber","handleCorrectnessChecked","correctnessChecked","handleHealthChecked","healthChecked","handleSubmit","status","apiCall","customer","axios","post","then","res","postSuccessful","data","catch","postError","postErrorMessage","sendData","newErrors","push","emailValidator","validate","errors","phoneNumber","scrollTo","undefined","qs","queryString","parse","this","location","search","Object","keys","table","LinearProgress","FormGroup","map","message","index","Alert","severity","Fragment","Button","size","onClick","Component","withRouter","alignItems","Avatar","setName","password","setPassword","isError","setIsError","setMessage","replace","err","autoFocus","onKeyDown","UserSetting","users","setUsers","setUsername","isAdmin","setIsAdmin","open","setOpen","setStatus","statusMessage","setStatusMessage","openDelete","setOpenDelete","userToDelete","setUserToDelete","cancelInput","cancelDelete","get","headers","Authorization","console","log","Dialog","onClose","DialogTitle","DialogContent","DialogActions","_id","checked","registerUser","secondary","ListItemSecondaryAction","processDelete","Utilities","startOf","startDate","setStartDate","endOf","endDate","setEndDate","period","setPeriod","handleStartDate","date","downloadcsv","a","options","filename","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","title","useTextFile","useBom","useKeysAsHeaders","timePeriod","ExportToCsv","generateCsv","FormControl","FormLabel","RadioGroup","event","Radio","utils","DateFnsUtils","margin","views","minDate","Date","maxDate","Manage","selectedTime","tab","radio","openingHours","handleTab","bind","handleDate","handleRadio","handleError","getData","newValue","prevProps","AppBar","position","Tabs","Tab","square","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","dat","mapDispatchToProps","ManageContainer","connect","NotFound","PrivateRoute","auth","setAuth","render","to","pathname","from","App","path","exact","component","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.efe9fbdc.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\r\n\r\nconst userState = {\r\n  user: {\r\n    username:\"\",\r\n    admin:false,\r\n    token:\"\",\r\n  }\r\n}\r\n\r\nconst user_state = (state = userState, action) => {\r\n  switch(action.type){\r\n    case \"LOGIN\" :\r\n      let newUser = {username:action.user.username, admin:action.user.admin, token: action.token}\r\n      return {\r\n        ...state,\r\n        user: newUser\r\n      }\r\n    case \"LOGOUT\" :\r\n      return {\r\n        user: {\r\n          username:\"\",\r\n          admin:false,\r\n          token:\"\"\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const reducers = combineReducers({\r\n  user_state\r\n})","import { createStore } from 'redux'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { reducers } from './reducers/index'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist:['user_state']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport const persistor = persistStore(store)\r\nexport default store","export const login = (user, token) => ({\r\n  type: \"LOGIN\",\r\n  user,\r\n  token\r\n})\r\n\r\nexport const logout = () => ({\r\n  type: \"LOGOUT\"\r\n})","import React from 'react'\r\nimport {Container, Paper, Typography} from '@material-ui/core'\r\nimport {makeStyles} from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  TopPaper:{\r\n    backgroundColor:\"#3F51B5\",\r\n    color:\"white\",\r\n    textAlign:\"center\",\r\n  }\r\n})\r\n\r\nconst TitleBar = props => {\r\n  const classes=useStyles()\r\n  return (\r\n    <Paper className={classes.TopPaper}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h6\">\r\n          Your Restaurant\r\n        </Typography>\r\n        <Typography variant=\"caption\">\r\n          according to COVID-19 Safe Checklist\r\n        </Typography>\r\n      </Container>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default TitleBar","import React from 'react'\r\nimport { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core'\r\nimport { CheckCircle } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles({\r\n  Grid:{\r\n    textAlign:\"center\"\r\n  },\r\n  Icon:{\r\n    fontSize:200,\r\n    color:\"green\"\r\n  }\r\n})\r\n\r\nconst SuccessfulMessage = props => {\r\n  const classes = useStyles()\r\n  return(\r\n    <Grid container spacing={2} justify=\"center\" className={classes.Grid}>\r\n      <Grid item xs={8}>\r\n        <CheckCircle className={classes.Icon}/>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <Typography variant=\"h6\">\r\n          SignIn Successful!\r\n        </Typography>\r\n      </Grid>\r\n      {props.user &&\r\n        <Grid item xs={8} container spacing={3}>\r\n          <List>\r\n            <ListItem key=\"username\">\r\n              <ListItemText\r\n                primary={`Your Name: ${props.user.firstName} ${props.user.lastName}`}\r\n              />\r\n            </ListItem>\r\n            <ListItem key=\"email\">\r\n              <ListItemText\r\n                primary={`Email: ${props.user.email}`}\r\n              />\r\n            </ListItem>\r\n            <ListItem key=\"time\">\r\n              <ListItemText\r\n                primary={`Check in Time: ${moment(props.user.checkInTime).format(\"DD/MM hh:mm:ss\")}`}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </Grid>\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SuccessfulMessage","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nconst NameInput = props => {\r\n  const [touched, setTouched] = React.useState(false)\r\n  const [valid, setValid] = React.useState(true)\r\n  const handleTouched = value => {\r\n    setTouched(value)\r\n  }\r\n  const validator = (e) => {\r\n    if(!touched){\r\n      handleTouched(true)\r\n      setValid(true)\r\n    } else if(e.target.value.length === 0){\r\n      setValid(false)\r\n    } else {\r\n      setValid(true)\r\n    }\r\n    props.handler(e.target.value)\r\n  }\r\n  return (\r\n    <>\r\n      {(props.value.length > 0 && valid) || !touched? \r\n        <TextField \r\n          required\r\n          fullWidth\r\n          id={props.input}\r\n          placeholder={props.input}\r\n          helperText=\"requied\"\r\n          label={props.input}\r\n          value={props.value}\r\n          onChange={e => validator(e)}\r\n        />:\r\n        <TextField \r\n          error\r\n          required\r\n          fullWidth\r\n          id={props.input}\r\n          placeholder={props.input}\r\n          helperText=\"requied\"\r\n          label={`${props.input} required`}\r\n          value={props.value}\r\n          onChange={e => validator(e)}\r\n        />\r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NameInput","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  Paper:{\r\n    paddingTop:\"1em\",\r\n    paddingBottom:\"1em\"\r\n  }\r\n})\r\n\r\nconst EmailInput = props => {\r\n  const classes = useStyles()\r\n  const [touched, setTouched] = React.useState(false)\r\n  const [valid, setValid] = React.useState(true)\r\n  const handleTouched = value => {\r\n    setTouched(value)\r\n  }\r\n  const validator = (e) => {\r\n    if(!touched){\r\n      handleTouched(true)\r\n      setValid(true)\r\n    } else if(e.target.value.length === 0){\r\n      setValid(false)\r\n    } else {\r\n      setValid(true)\r\n    }\r\n    props.handler(e.target.value)\r\n  }\r\n  return (\r\n    <div className={classes.Paper}>\r\n      {(props.value.length > 0 && valid) || !touched ?\r\n      <TextField \r\n        required\r\n        fullWidth\r\n        id=\"email address\"\r\n        placeholder=\"email address\"\r\n        helperText=\"requied\"\r\n        label=\"email address\"\r\n        type=\"email\"\r\n        value={props.value}\r\n        onChange={e => validator(e)}\r\n      />:\r\n      <TextField \r\n        required\r\n        fullWidth\r\n        error\r\n        id=\"email address\"\r\n        placeholder=\"email address\"\r\n        helperText=\"invalid\"\r\n        label=\"email address\"\r\n        type=\"email\"\r\n        value={props.value}\r\n        onChange={e => validator(e)}\r\n      />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmailInput","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  Paper:{\r\n    paddingTop:\"1em\",\r\n    paddingBottom:\"1em\"\r\n  }\r\n})\r\n\r\nconst NumberInput = props => {\r\n  const classes = useStyles()\r\n  const [touched, setTouched] = React.useState(false)\r\n  const [valid, setValid] = React.useState(true)\r\n  const handleTouched = value => {\r\n    setTouched(value)\r\n  }\r\n  const validator = (e) => {\r\n    if(!touched){\r\n      handleTouched(true)\r\n      setValid(true)\r\n    } else if(e.target.value.length === 0){\r\n      setValid(false)\r\n    } else {\r\n      setValid(true)\r\n    }\r\n    props.handler(e.target.value)\r\n  }\r\n  return (\r\n    <div className={classes.Paper}>\r\n      {(props.value.length > 0 && valid) || !touched ?\r\n      <TextField \r\n        required\r\n        fullWidth\r\n        id=\"number\"\r\n        placeholder=\"phone\"\r\n        helperText=\"requied\"\r\n        label=\"phone\"\r\n        type=\"tel\"\r\n        value={props.value}\r\n        onChange={e => validator(e)}\r\n      />:\r\n      <TextField \r\n        required\r\n        fullWidth\r\n        error\r\n        id=\"number\"\r\n        placeholder=\"phone\"\r\n        helperText=\"required\"\r\n        label=\"phone\"\r\n        type=\"tel\"\r\n        value={props.value}\r\n        onChange={e => validator(e)}\r\n      />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberInput","import React from 'react'\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core'\r\n\r\nconst CheckForm = props => {\r\n  return(\r\n    <>\r\n      <FormControlLabel\r\n        label={props.label}\r\n        control={\r\n          <Checkbox name=\"correctness\" value={props.value} onChange={e => props.handler(e.target.value)}/>\r\n        }\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CheckForm","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  Paper:{\r\n    paddingTop:\"1em\",\r\n    paddingBottom:\"1em\"\r\n  }\r\n})\r\n\r\nconst TableNumberInput = props => {\r\n  const classes = useStyles()\r\n  const [touched, setTouched] = React.useState(false)\r\n  const [valid, setValid] = React.useState(true)\r\n  const handleTouched = value => {\r\n    setTouched(value)\r\n  }\r\n  const validator = (e) => {\r\n    if(!touched){\r\n      handleTouched(true)\r\n      setValid(true)\r\n    } else if(e.target.value.length === 0){\r\n      setValid(false)\r\n    } else {\r\n      setValid(true)\r\n    }\r\n    props.handler(e.target.value)\r\n  }\r\n  React.useEffect(() => {\r\n    if(props.tableQuery){\r\n      if(props.tableQuery.exists){\r\n        props.handler(props.tableQuery.number)\r\n      }\r\n    }\r\n\r\n  },[props.tableQuery])\r\n  return (\r\n    <div className={classes.Paper}>\r\n      { props.tableQuery.exists ?\r\n        <TextField\r\n          disabled\r\n          fullWidth\r\n          value={props.value}\r\n          helperText=\"prefilled\"\r\n          label=\"table number\"\r\n        />:\r\n        ((props.value && valid) || !touched ?\r\n        <TextField \r\n          required\r\n          fullWidth\r\n          id=\"table number\"\r\n          placeholder=\"table number\"\r\n          helperText=\"requied\"\r\n          label=\"table number\"\r\n          type=\"number\"\r\n          value={props.value}\r\n          onChange={e => validator(e)}\r\n        />:\r\n        <TextField \r\n          required\r\n          fullWidth\r\n          error\r\n          id=\"table number\"\r\n          placeholder=\"table number\"\r\n          helperText=\"required\"\r\n          label=\"table number\"\r\n          type=\"number\"\r\n          value={props.value}\r\n          onChange={e => validator(e)}\r\n        />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableNumberInput","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Container, Grid, Paper, Button, FormGroup, LinearProgress, Typography} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport emailValidator from 'email-validator'\r\nimport axios from 'axios'\r\nimport queryString from 'query-string'\r\nimport TitleBar from '../components/TitleBar'\r\nimport SuccessfulMessage from '../components/SuccessfulMessage'\r\nimport NameInput from '../components/NameInput'\r\nimport EmailInput from '../components/EmailInput'\r\nimport NumberInput from '../components/NumberInput'\r\nimport Checkbox from '../components/Checkbox'\r\nimport TableNumberInput from '../components/TableNumberInput'\r\n\r\n\r\nclass Main extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName:\"\",\r\n      email:\"\",\r\n      number:\"\",\r\n      tableNumber:\"\",\r\n      status:\"input\",\r\n      correctnessChecked:false,\r\n      healthChecked:false,\r\n      errors:[],\r\n      postSuccessful:false,\r\n      postError:false,\r\n      postErrorMessage:\"\",\r\n      tableQuery:{\r\n        number: 0,\r\n        exists: false\r\n      },\r\n      user:undefined,\r\n    }\r\n  }\r\n\r\n  handleFirstName = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        firstName:value\r\n      }\r\n    })\r\n  }\r\n  handleLastName = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        lastName:value\r\n      }\r\n    })\r\n  }\r\n  handleEmail = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        email:value\r\n      }\r\n    })\r\n  }\r\n  handleNumber = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        number:value\r\n      }\r\n    })\r\n  }\r\n  handleTableNumber = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        tableNumber:value\r\n      }\r\n    })\r\n  }\r\n  handleCorrectnessChecked = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        correctnessChecked:value\r\n      }\r\n    })\r\n  }\r\n  handleHealthChecked = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        healthChecked:value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit = value => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        status: \"submitted\"\r\n      }\r\n    })\r\n  }\r\n\r\n  apiCall = customer => {\r\n    axios.post('https://signin-demo.herokuapp.com/api/checkin', customer).then(res => {\r\n      if(res.status === 201){\r\n        this.setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            postSuccessful:true,\r\n            status:res.data.status,\r\n            user:res.data.user\r\n          }\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          postError: true,\r\n          postErrorMessage:\"Communication Error\"\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  sendData = () => {\r\n    let newErrors = []\r\n    if(this.state.firstName.length === 0){\r\n      newErrors.push(\"Please fill in your first name\")\r\n    }\r\n    if(this.state.lastName.length === 0){\r\n      newErrors.push(\"Please fill in your last name\")\r\n    }\r\n    if(this.state.email.length > 0){\r\n      if(!emailValidator.validate(this.state.email)){\r\n        newErrors.push(\"Your email address is invalid\")\r\n      }\r\n    } else {\r\n      newErrors.push(\"Please fill in your email address\")\r\n    }\r\n    if(this.state.number.length === 0){\r\n      newErrors.push(\"Please fill in your phone number\")\r\n    }\r\n    if(!this.state.correctnessChecked){\r\n      newErrors.push(\"Please declare the information is correct\")\r\n    }\r\n    if(!this.state.healthChecked){\r\n      newErrors.push(\"We cannot allow you to dine in if you're sick\")\r\n    }\r\n    if(newErrors.length > 0){\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          errors:newErrors\r\n        }\r\n      })\r\n    } else {\r\n      const customer = {\r\n        firstName:this.state.firstName,\r\n        lastName:this.state.lastName,\r\n        email:this.state.email,\r\n        phoneNumber:this.state.number,\r\n        tableNumber:this.state.tableNumber,\r\n      }\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          status:\"submit\"\r\n        }\r\n      })\r\n      this.apiCall(customer)\r\n    }\r\n    window.scrollTo(0,0)\r\n  }\r\n\r\n  componentDidMount(){\r\n    let qs = queryString.parse(this.props.location.search)\r\n    if(Object.keys(qs).length === 1){\r\n      if(Object.keys(qs)[0] === \"table\"){\r\n        this.setState({tableQuery:{\r\n          number:qs.table,\r\n          exists:true\r\n        }})\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n    <div>\r\n      {this.state.status === \"submit\" &&\r\n        <LinearProgress />\r\n      }\r\n      <Container maxWidth=\"lg\">\r\n        <FormGroup className=\"topGrid\">\r\n          <Grid container spacing={3} >\r\n            <Grid item xs={12} >\r\n              <TitleBar />\r\n            </Grid>\r\n            {this.state.errors.length > 0 && this.state.errors.map((message, index) => \r\n              <Grid item xs={12}>\r\n                <Alert severity=\"error\">{message}</Alert>\r\n              </Grid> )}\r\n            {this.state.postError && \r\n              <Grid item xs={12}>\r\n                <Alert severity=\"error\">{this.state.postErrorMessage}</Alert>\r\n              </Grid>\r\n            }\r\n            {this.state.postSuccessful ? <SuccessfulMessage user={this.state.user}/>:\r\n            <React.Fragment>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <Container maxWidth=\"lg\">\r\n                    <div className=\"Paper\">\r\n                      <NameInput input=\"first name\" value={this.state.firstName}  handler={this.handleFirstName}/>\r\n                      <NameInput input=\"last name\" value={this.state.lastName} handler={this.handleLastName} />\r\n                    </div>\r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <Container maxWidth=\"lg\">\r\n                    <EmailInput value={this.state.email} handler={this.handleEmail} />\r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <Container maxWidth=\"lg\">\r\n                    <NumberInput value={this.state.number} handler={this.handleNumber} />\r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <Container maxWidth=\"lg\">\r\n                    <TableNumberInput value={this.state.tableNumber} handler={this.handleTableNumber} tableQuery={this.state.tableQuery}/> \r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <Container maxWidth=\"lg\">\r\n                    <div className=\"Paper\">\r\n                      <Checkbox  \r\n                        label=\"I declare that the details above are correct and acurate\"\r\n                        value={this.state.correctnessChecked}\r\n                        handler={this.handleCorrectnessChecked}\r\n                      />\r\n                      <Checkbox\r\n                        label=\"I am not currently suffering from any flu or COIVD-19 like symptoms\"\r\n                        value={this.state.healthChecked}\r\n                        handler={this.handleHealthChecked}\r\n                      />\r\n                    </div>\r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={() => this.sendData()}>Submit</Button>\r\n              </Grid>\r\n            </React.Fragment>}\r\n          </Grid>\r\n        </FormGroup>\r\n        <Typography variant=\"caption\" color=\"textPrimary\">Contact information is to be used only for the purposes of contact tracing.</Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">© Michael Kenji Wilkins 2020</Typography>\r\n      </Container>  \r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default withRouter(Main)","import React, {useState} from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Button, Container, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles({\r\n  Container: {\r\n    paddingTop:\"2em\",\r\n    paddingBottom:\"2em\"\r\n  },\r\n  Paper:{\r\n    paddingTop:\"2m\",\r\n    paddingBottom:\"2em\",\r\n    textAlign:\"center\",\r\n    alignItems:\"center\"\r\n  },\r\n  Avatar:{\r\n    alignItems:\"center\"\r\n  }\r\n})\r\n\r\nconst Login = props => {\r\n  const classes = useStyles()\r\n  const [name, setName] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [isError, setIsError] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  const login = () => {\r\n    const data ={\r\n      username:name,\r\n      password:password\r\n    }\r\n    axios.post('https://signin-demo.herokuapp.com/api/login', data).then(res => {\r\n      if(res.status === 201){\r\n        props.login(res.data.user, res.data.token)\r\n        window.location.replace('/manage')\r\n      }\r\n    }).catch(err => {\r\n      if(err){\r\n        setIsError(true)\r\n        setMessage(\"Your username or password does'nt match\")\r\n      }\r\n    })\r\n  }\r\n  return(\r\n    <Container maxWidth=\"md\" className={classes.Container}>\r\n      <Paper className={classes.Paper}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">\r\n              Login\r\n            </Typography>\r\n          </Grid>\r\n          {isError && \r\n            <Grid item xs={12}>\r\n              <Alert severity=\"error\">{message}</Alert>\r\n            </Grid>\r\n          }\r\n\r\n          <Grid item xs={12}>\r\n            <Container maxWidth=\"sm\">\r\n              <TextField\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                fullWidth\r\n                autoFocus\r\n                placeholder=\"username\"\r\n                label=\"user name\"\r\n                type=\"text\"\r\n                onKeyDown={e => {\r\n                  if(e.key === \"Enter\"){\r\n                    login()\r\n                  }\r\n                }} \r\n              />\r\n            </Container>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Container maxWidth=\"sm\">\r\n              <TextField\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                fullWidth\r\n                placeholder=\"password\"\r\n                label=\"password\"\r\n                type=\"password\"\r\n                onKeyDown={e => {\r\n                  if(e.key === \"Enter\"){\r\n                    login()\r\n                  }\r\n                }} \r\n              />\r\n            </Container>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => login()}>\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withRouter(Login)","import React, {useState, useEffect} from 'react'\r\nimport { \r\n  Button, Checkbox, Container, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, Grid, List, ListItem, ListItemSecondaryAction, ListItemText, TextField, Typography \r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport axios from 'axios'\r\n\r\nconst UserSetting = props => {\r\n  const [users, setUsers] = useState([])\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [status, setStatus] = useState(true)\r\n  const [statusMessage, setStatusMessage] = useState(\"\")\r\n  const [openDelete, setOpenDelete] = useState(false)\r\n  const [userToDelete, setUserToDelete] = useState()\r\n  const registerUser = () => {\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n      admin: isAdmin\r\n    }\r\n    cancelInput()\r\n    axios.post(\"https://signin-demo.herokuapp.com/api/register\", user).then(res => {\r\n      if(res.status === 201){\r\n        if(!props.user.admin){return}\r\n        setStatus(true)\r\n        setStatusMessage(\"User Creation Successful\")\r\n        axios.get(\"https://signin-demo.herokuapp.com/api/getusers\", {headers:{Authorization:`Bearer ${props.user.token}`}}).then(res => {\r\n          setUsers(res.data)\r\n        }).catch(error => {\r\n          if(error){\r\n            setStatus(false)\r\n            setStatusMessage(\"Communication Failed\")\r\n          }\r\n        })\r\n      } else {\r\n        setStatus(false)\r\n        setStatusMessage(res.data.message)\r\n      }\r\n    })\r\n  }\r\n  const cancelInput = () => {\r\n    setOpen(false)\r\n    setUsername(\"\")\r\n    setPassword(\"\")\r\n    setIsAdmin(false)\r\n  }\r\n  const deleteUser = id => {\r\n    cancelDelete()\r\n    if(!props.user.admin){return}\r\n    axios.post(\"https://signin-demo.herokuapp.com/api/delete\", {id:id}, {headers:{Authorization:`Bearer ${props.user.token}`}}).then(res => {\r\n      if(res.status === 201){\r\n        setStatus(true)\r\n        setStatusMessage(\"Deletion Successful\")\r\n        axios.get(\"https://signin-demo.herokuapp.com/api/getusers\", {headers:{Authorization:`Bearer ${props.user.token}`}}).then(res => {\r\n          console.log(res.data)\r\n          setUsers(res.data)\r\n        }).catch(error => {\r\n          if(error){\r\n            setStatus(false)\r\n            setStatusMessage(\"Communication Failed\")\r\n          }\r\n        })\r\n      } else {\r\n        setStatus(false)\r\n        setStatusMessage(res.data.message)\r\n      }\r\n    })\r\n  }\r\n  const cancelDelete = () => {\r\n    setOpenDelete(false)\r\n    setUserToDelete(undefined)\r\n  }\r\n  const processDelete = user => {\r\n    setOpenDelete(true)\r\n    setUserToDelete(user)\r\n  }\r\n  useEffect(() => {\r\n    axios.get(\"https://signin-demo.herokuapp.com/api/getusers\", {headers:{Authorization:`Bearer ${props.user.token}`}}).then(res => {\r\n      console.log(res.data)\r\n      if(res.data.message === \"failed\"){\r\n        window.location.replace(\"/login\")\r\n      }\r\n      setUsers(res.data)\r\n    }).catch(error => {\r\n      if(error){\r\n        setStatus(false)\r\n        setStatusMessage(\"Communication Failed\")\r\n      }\r\n    })\r\n  }, [props.user.token])\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\">Users Setting</Typography>\r\n        </Grid>\r\n        {statusMessage.length > 0 &&\r\n          <Grid item xs={12}>\r\n            {status ? <Alert severity=\"success\">{statusMessage}</Alert> : <Alert severity=\"error\">{statusMessage}</Alert>}\r\n          </Grid>\r\n        }\r\n        <Dialog open={openDelete} onClose={() => cancelDelete()}>\r\n          <DialogTitle>Delete User</DialogTitle>\r\n          <DialogContent>\r\n            {userToDelete &&\r\n            <Typography variant=\"h6\">\r\n              {`Are you sure delete user: ${userToDelete.username}?`}\r\n            </Typography>\r\n            }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"secondary\" onClick={() => cancelDelete()}>Cancel</Button>\r\n            {userToDelete && <div>\r\n            <Button color=\"primary\" onClick={() => deleteUser(userToDelete._id)}>Delete</Button>\r\n            </div>}\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={open} onClose={() => setOpen(false)}>\r\n          <DialogTitle>Add New User</DialogTitle>\r\n          <DialogContent>\r\n            <div>\r\n              <TextField\r\n                required\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                placeholder=\"user name\"\r\n                label=\"user name\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                required\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                placeholder=\"password\"\r\n                label=\"password\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={isAdmin}\r\n                    onChange={e => setIsAdmin(e.target.checked)}\r\n                  />\r\n                }\r\n                label=\"admin\"\r\n              />\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"secondary\" onClick={() => cancelInput()}>Cancel</Button>\r\n            <Button color=\"primary\" onClick={() => registerUser()}>Add</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Grid item xs={12}>\r\n          <List>\r\n            {props.user.admin &&\r\n            <ListItem>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(true)}>Add New User</Button>\r\n            </ListItem>\r\n            }\r\n            {users.length > 0 ? <div>{\r\n              users.map((user) => \r\n              <ListItem key={user._id}>\r\n                <ListItemText primary={user.username} secondary={user.admin ? \"admin\" : \"\" } />\r\n                <ListItemSecondaryAction>\r\n                  {props.user.admin &&\r\n                    <Button color=\"secondary\" onClick={() => processDelete(user) }>Delete</Button>\r\n                  }\r\n                </ListItemSecondaryAction>\r\n              </ListItem>) }</div> :\r\n              <ListItem>\r\n                <ListItemText>loading...</ListItemText>\r\n              </ListItem>\r\n              \r\n            }\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSetting","import React, { useState } from 'react'\r\nimport { Button, Container, FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, Typography } from '@material-ui/core'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\r\nimport { Alert } from '@material-ui/lab'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport moment from 'moment'\r\nimport { ExportToCsv } from \"export-to-csv\"\r\nimport axios from 'axios'\r\nimport \"../App.css\"\r\n\r\nconst Utilities = props => {\r\n  const [startDate, setStartDate] = useState(moment().startOf('day'))\r\n  const [endDate, setEndDate] = useState(moment().endOf('day'))\r\n  const [period, setPeriod] = useState(\"Day\")\r\n  const [isError, setIsError] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  const handlePeriod = event => {\r\n    setPeriod(event.target.value)\r\n    if(event.target.value === \"Day\"){\r\n      setStartDate(moment().startOf(\"day\").format())\r\n      setEndDate(moment(startDate).endOf('day').format())\r\n    } else {\r\n      setStartDate(moment(startDate).startOf(\"month\").format())\r\n      setEndDate(moment(startDate).endOf('month').format())\r\n    }\r\n  }\r\n  const handleStartDate = date => {\r\n    setStartDate(moment(date).startOf('day'))\r\n  }\r\n  const downloadcsv = async () => {\r\n  const options = { \r\n    filename:moment(startDate).format(\"DD/MM/YYYY\"),\r\n    fieldSeparator: ',',\r\n    quoteStrings: '\"',\r\n    decimalSeparator: '.',\r\n    showLabels: true, \r\n    showTitle: true,\r\n    title: moment(startDate).format(\"DD/MM/YYYY\"),\r\n    useTextFile: false,\r\n    useBom: true,\r\n    useKeysAsHeaders: true,\r\n  };\r\n\r\n    const timePeriod = {\r\n      startDate,\r\n      endDate,\r\n      period\r\n    }\r\n    \r\n    await axios.post(\"https://signin-demo.herokuapp.com/api/download\", timePeriod, {headers:{Authorization:`Bearer ${props.user.token}`}}).then(res => {\r\n      const csvExporter = new ExportToCsv(options)\r\n      csvExporter.generateCsv(res.data)\r\n    }).catch(err => {\r\n      if(err){\r\n        setIsError(true)\r\n        setMessage(\"Oops Something Went Wrong!\")\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" className=\"Paper\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {isError && \r\n        <Grid item xs={11}>\r\n          <Alert severity=\"error\">{message}</Alert>\r\n        </Grid>}\r\n        <Grid item xs={11} container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">\r\n              Download User Data\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl>\r\n              <FormLabel>Download Period</FormLabel>\r\n              <RadioGroup value={period} onChange={handlePeriod}>\r\n                <FormControlLabel value=\"Day\" label=\"Day\" control={<Radio />} />\r\n                <FormControlLabel value=\"Month\" label=\"Month\" control={<Radio />} />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            \r\n            {period === \"Day\" && \r\n            <div>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                label=\"Date Select\"\r\n                value={startDate}\r\n                onChange={handleStartDate}\r\n              />\r\n              </MuiPickersUtilsProvider>\r\n            </div>}\r\n            {period === \"Month\" && \r\n            <div>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                views={[\"year\", \"month\"]}\r\n                label=\"Month Select\"\r\n                minDate={new Date(\"2020-01-01\")}\r\n                maxDate={new Date()}\r\n                value={startDate}\r\n                onChange={handleStartDate}\r\n              />\r\n              </MuiPickersUtilsProvider>\r\n            </div>}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button color=\"primary\" onClick={() => downloadcsv()}>download</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Utilities","import React from 'react'\r\nimport { \r\n  AppBar, Container, FormControl, FormControlLabel, FormLabel,\r\n  Grid, Paper, Radio, RadioGroup, Tabs, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { login, logout } from '../actions/index'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport UserSetting from '../components/UserSetting'\r\nimport Utilities from '../components/Utilities'\r\nimport axios from 'axios'\r\nimport \"../App.css\"\r\n\r\nclass Manage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      data:undefined,\r\n      date: new Date(),\r\n      selectedTime: undefined,\r\n      tab: 0,\r\n      radio: \"none\",\r\n      openingHours:[],\r\n      isError:false,\r\n      message:\"\",\r\n    }\r\n    this.handleTab = this.handleTab.bind(this)\r\n    this.handleDate = this.handleDate.bind(this)\r\n    this.handleRadio = this.handleRadio.bind(this)\r\n    this.handleError = this.handleError.bind(this)\r\n    this.getData = this.getData.bind(this)\r\n  }\r\n  handleTab(event, newValue){\r\n    this.setState({tab:newValue})\r\n  }\r\n  handleDate(date){\r\n    this.setState({date:date})\r\n  }\r\n  handleRadio(event){\r\n    this.setState({radio:event.target.value})\r\n  }\r\n  handleError(value){\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isError:true,\r\n        message:value\r\n      }\r\n    })\r\n  }\r\n  componentDidMount(){\r\n    this.getData()\r\n  }\r\n  getData(){\r\n    if(this.state.radio === \"none\"){\r\n      axios.get('https://signin-demo.herokuapp.com/api/getlist', {headers:{Authorization:`Bearer ${this.props.user.token}`}}).then(res => {\r\n        if(res.data.message === \"failed\"){\r\n          window.location.replace(\"/login\")\r\n        }\r\n        this.setState({data:res.data})\r\n      }).catch(err => {\r\n        if(err){\r\n          this.handleError(\"Communication Error\")\r\n        }\r\n      })\r\n    } else if(this.state.radio === \"allday\"){\r\n      axios.get(`https://signin-demo.herokuapp.com/api/getlist/bydate?date=${this.state.date}`, {headers:{Authorization:`Bearer ${this.props.user.token}`}}).then(res => {\r\n        if(res.data.message === \"failed\"){\r\n          window.location.replace(\"/login\")\r\n        }\r\n        this.setState({data:res.data})\r\n      }).catch(err => {\r\n        if(err){\r\n          this.handleError(\"Communication Error\")\r\n        }\r\n      })\r\n    } else if(this.state.radio === \"lunch\"){\r\n      axios.get(`https://signin-demo.herokuapp.com/api/getlist/bylunch?date=${this.state.date}`, {headers:{Authorization:`Bearer ${this.props.user.token}`}}).then(res => {\r\n        if(res.data.message === \"failed\"){\r\n          window.location.replace(\"/login\")\r\n        }\r\n        this.setState({data:res.data})\r\n      }).catch(err => {\r\n        if(err){\r\n          this.handleError(\"Communication Error\")\r\n        }\r\n      })\r\n    } else if(this.state.radio === \"dinner\"){\r\n      axios.get(`https://signin-demo.herokuapp.com/api/getlist/bydinner?date=${this.state.date}`, {headers:{Authorization:`Bearer ${this.props.user.token}`}}).then(res => {\r\n        if(res.data.message === \"failed\"){\r\n          window.location.replace(\"/login\")\r\n        }\r\n        this.setState({data:res.data})\r\n      }).catch(err => {\r\n        if(err){\r\n          this.handleError(\"Communication Error\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(this.state.radio === \"allday\"){\r\n      if(prevState.date !== this.state.date){\r\n        this.getData()\r\n        return\r\n      }\r\n    }\r\n    if(prevState.radio !== this.state.radio){\r\n      this.getData()\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <Container maxWidth=\"lg\">\r\n        <AppBar position=\"static\">\r\n          <Tabs value={this.state.tab} onChange={this.handleTab}>\r\n            <Tab label=\"Signin List\" />\r\n            <Tab label=\"Users Setting\" />\r\n            <Tab label=\"Utilities\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        {this.state.tab === 0 && \r\n        <Paper square className=\"Paper\">\r\n          <Grid container spacing={3}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              {this.state.isError && \r\n                <Grid item xs={12}>\r\n                  <Alert severity=\"error\">{this.state.message}</Alert>\r\n                </Grid>\r\n              }\r\n              <Grid item xs={12} container justify=\"center\" spacing={3}>\r\n                <Grid item xs={3}>\r\n                  <FormControl>\r\n                    <FormLabel>First 100</FormLabel>\r\n                    <RadioGroup value={this.state.radio} onChange={this.handleRadio}>\r\n                      <FormControlLabel value={\"none\"} label=\"first 100\" control={<Radio />} />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <FormControl>\r\n                    <FormLabel>Search by Date</FormLabel>\r\n                    <RadioGroup value={this.state.radio} onChange={this.handleRadio}>\r\n                      <FormControlLabel value={\"allday\"} label=\"all day\" control={<Radio />} />\r\n                    </RadioGroup>\r\n                    {this.state.radio === \"none\" ? \r\n                    <KeyboardDatePicker\r\n                      disabled\r\n                      margin=\"normal\"\r\n                      label=\"Search for\"\r\n                      value={this.state.date}\r\n                    />:\r\n                    <KeyboardDatePicker\r\n                      label=\"Search for\"\r\n                      margin=\"normal\"\r\n                      value={this.state.date}\r\n                      onChange={this.handleDate}\r\n                    />}\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <FormControl>\r\n                    <FormLabel>Filter</FormLabel>\r\n                    <RadioGroup value={this.state.radio} onChange={this.handleRadio} >\r\n                      <FormControlLabel value={\"lunch\"} label=\"lunch\" control={<Radio />}/>\r\n                      <FormControlLabel value={\"dinner\"} label=\"dinner\" control={<Radio />}/>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            {this.state.data && \r\n              <Grid item xs={11}>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Date/Time</TableCell>\r\n                        <TableCell align=\"right\">first name</TableCell>\r\n                        <TableCell align=\"right\">last name</TableCell>\r\n                        <TableCell align=\"right\">email</TableCell>\r\n                        <TableCell align=\"right\">phone no.</TableCell>\r\n                        <TableCell align=\"right\">table no.</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {this.state.data.map((dat, index) => \r\n                        <TableRow key={index}>\r\n                          <TableCell>{moment(dat.checkInTime).format(\"DD/MM/YYYY hh:mm:ss\")}</TableCell>\r\n                          <TableCell align=\"right\">{dat.firstName}</TableCell>\r\n                          <TableCell align=\"right\">{dat.lastName}</TableCell>\r\n                          <TableCell align=\"right\">{dat.email}</TableCell>\r\n                          <TableCell align=\"right\">{dat.phoneNumber}</TableCell>\r\n                          <TableCell align=\"right\">{dat.tableNumber}</TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            }\r\n          </Grid>\r\n        </Paper>\r\n        }\r\n        {this.state.tab === 1 &&\r\n        <Paper square className=\"Paper\">\r\n          <Grid container spacing={3}>\r\n            <UserSetting {...this.props}/>\r\n          </Grid>\r\n        </Paper>\r\n        }\r\n        {this.state.tab === 2 &&\r\n        <Paper square className=\"Paper\">\r\n          <Grid container spacing={3}>\r\n            <Utilities {...this.props}/>\r\n          </Grid>\r\n        </Paper>\r\n        }\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user:state.user_state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout\r\n}\r\n\r\nconst ManageContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Manage)\r\n\r\nexport default ManageContainer","import React from 'react'\r\nimport { Container, Grid, Typography } from '@material-ui/core'\r\n\r\nconst NotFound = () => {\r\n  return(\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={8}>\r\n          <Typography variant=\"h6\">\r\n            404 Not Found Sorry\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\nimport axios from 'axios'\r\n\r\nconst PrivateRoute = ({Component:Component, ...props}) => {\r\n  const [auth, setAuth] = React.useState(false);\r\n  const handleAuth = value => {\r\n    setAuth(value)\r\n  }\r\n  React.useEffect(async () => {\r\n      try {\r\n        axios.get('https://signin-demo.herokuapp.com/api/auth',{headers:{Authorization:`Bearer ${props.user.token}`}}).then(res => {\r\n          if(res.data.message === \"Auth Successful\"){\r\n            handleAuth(true)\r\n          } else {\r\n            window.location.replace(\"/login\")\r\n          }\r\n        }).catch(err => {\r\n          props.logout()\r\n          window.location.replace('/login')\r\n        })\r\n      } catch (error) {\r\n        props.logout()\r\n        window.location.replace('/login')\r\n      }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      {auth ? \r\n          <Route \r\n          {...props}\r\n          render={props => \r\n            props ? (<Component {...props} />): (<Redirect to={{pathname:\"/login\", state: {from: props.location}}} />)\r\n          }\r\n        >\r\n        </Route> : <LinearProgress />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { login, logout } from './actions/index'\nimport { connect } from 'react-redux';\n\nimport Main from './pages/Main'\nimport Login from './pages/Login'\nimport Manage from './pages/Manage'\nimport NotFound from './pages/NotFound'\nimport PrivateRoute from './components/PrivateRoute'\nimport \"./App.css\"\n\nclass App extends React.Component{\n\n  render(){\n    return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" exact>\n            <Login {...this.props}/>\n          </Route>\n          <PrivateRoute path=\"/manage\" component={Manage} {...this.props}/>\n          <Route path=\"/\" exact>\n            <Main {...this.props}/>\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      \n    </div>\n  );}\n}\n\nconst mapStateToProps = state => ({\n  user:state.user_state.user\n})\n\nconst mapDispatchToProps = {\n  login,\n  logout\n}\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default AppContainer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store, { persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}